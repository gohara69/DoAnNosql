/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package chamsockh.DichVu;

import BLL.DichVuBll;
import chamsockh.Voucher.frmVoucher;
import chamsockh.frmTrangChu;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINH HOANG
 */
public class frmDichVu extends javax.swing.JInternalFrame {

    DichVuBll dvBll = new DichVuBll();
    Vector data = new Vector();
    Vector header = new Vector();
    /**
     * Creates new form frmDichVu
     */
    public frmDichVu() {
        initComponents();
        initTable();
        ResultSet rs = dvBll.getAllDichVu();
        try {
            while(rs.next()){
                Vector<String> info = new Vector<String>();
                info.add(rs.getString("MaDV"));
                info.add(rs.getString("TenDV"));
                info.add(rs.getString("MoTaDV"));
                info.add(rs.getString("GiaDV"));
                data.add(info);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void initTable(){
        header.add("Mã dịch vụ");
        header.add("Tên dịch vụ");
        header.add("Mô tả dịch vụ");
        header.add("Giá dịch vụ");

        tblDichVu.setModel(new DefaultTableModel(data, header));
    }
    
    public void displayDetail(int row){
        if(row >= 0){
            Vector<String> info = (Vector<String>) data.get(row);
            txtMaDV.setText(info.get(0));
            txtTenDV.setText(info.get(1));
        }
    }
    
    public void loadAllData(){
        DefaultTableModel model = ((DefaultTableModel)tblDichVu.getModel());
        model.setRowCount(0);
        ResultSet rs = dvBll.getAllDichVu();
        if(rs != null){
            try {
                while(rs.next()){
                    Vector<String> info = new Vector<String>();
                    info.add(rs.getString("MaDV"));
                    info.add(rs.getString("TenDV"));
                    info.add(rs.getString("MoTaDV"));
                    info.add(rs.getString("GiaDV"));
                    data.add(info);
                }   
            } catch (SQLException ex) {
                Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã dịch vụ cần tìm");
        }
    }

    public void loadDataByMaDV(String madv){
        DefaultTableModel model = ((DefaultTableModel)tblDichVu.getModel());
        model.setRowCount(0);
        ResultSet rs = dvBll.getAllDichVuByMaDv(madv);
        if(rs != null){
            try {
                while(rs.next()){
                    Vector<String> info = new Vector<String>();
                    info.add(rs.getString("MaDV"));
                    info.add(rs.getString("TenDV"));
                    info.add(rs.getString("MoTaDV"));
                    info.add(rs.getString("GiaDV"));
                    data.add(info);
                }   
            } catch (SQLException ex) {
                Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã dịch vụ cần tìm");
        }
    }
    
    public void loadDataByTenDV(String tendv){
        DefaultTableModel model = ((DefaultTableModel)tblDichVu.getModel());
        model.setRowCount(0);
        ResultSet rs = dvBll.getAllDichVuByTenDV(tendv);
        if(rs != null){
            try {
                while(rs.next()){
                    Vector<String> info = new Vector<String>();
                    info.add(rs.getString("MaDV"));
                    info.add(rs.getString("TenDV"));
                    info.add(rs.getString("MoTaDV"));
                    info.add(rs.getString("GiaDV"));
                    data.add(info);
                }   
            } catch (SQLException ex) {
                Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã dịch vụ cần tìm");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMaDV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenDV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDichVu = new javax.swing.JTable();
        btnTimKiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        setBorder(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Dịch vụ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 20, -1, -1));

        jLabel1.setText("Mã dịch vụ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 61, -1, -1));
        getContentPane().add(txtMaDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 148, -1));

        jLabel3.setText("Tên dịch vụ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        getContentPane().add(txtTenDV, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 148, -1));

        tblDichVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã dịch vụ", "Tên dịch vụ", "Mô tả", "Giá"
            }
        ));
        tblDichVu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDichVu);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 500, -1));

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, -1, -1));

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDichVuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuMouseClicked
        displayDetail(((JTable)evt.getSource()).getSelectedRow());
    }//GEN-LAST:event_tblDichVuMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String madv = txtMaDV.getText();
        String tendv = txtTenDV.getText();
        
        if(madv.isEmpty() && tendv.isEmpty()){
            loadAllData();
        } else {
            if(madv.isEmpty() == false){
                loadDataByMaDV(madv);
            } else {
                loadDataByTenDV(tendv);
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String madv = txtMaDV.getText();
        if(madv.isEmpty()){
            System.out.println("Vui lòng nhập mã dịch vụ để xóa");
        } else {
            try{
                int kq = dvBll.delete(madv);
                JOptionPane.showMessageDialog(this, "Xóa dịch vụ thành công");
                loadAllData();
            } catch (Exception e){
                JOptionPane.showMessageDialog(this, "Lỗi không thể xóa dịch vụ");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDichVu;
    private javax.swing.JTextField txtMaDV;
    private javax.swing.JTextField txtTenDV;
    // End of variables declaration//GEN-END:variables

    private void setExtendedState(int MAXIMIZED_BOTH) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
