/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package chamsockh.Voucher;

import BLL.VoucherBLL;
import chamsockh.DichVu.frmDichVu;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINH HOANG
 */
public class frmVoucher extends javax.swing.JInternalFrame {

    VoucherBLL _bll = new VoucherBLL();
    Vector data = new Vector();
    Vector header = new Vector();
    /**
     * Creates new form frmVoucher
     */
    public frmVoucher() {
        initComponents();
        initTable();
        
        ResultSet rs = _bll.getAllVoucher();
        try {
            while(rs.next()){
                Vector<String> info = new Vector<String>();
                info.add(rs.getString("MV"));
                info.add(rs.getString("TenV"));
                info.add(rs.getString("GiamGia"));
                data.add(info);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmVoucher.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public void initTable(){
        header.add("Mã voucher");
        header.add("Tên voucher");
        header.add("Giảm giá");

        tblVoucher.setModel(new DefaultTableModel(data, header));
    }
    
    public void displayDetail(int row){
        if(row >= 0){
            Vector<String> info = (Vector<String>) data.get(row);
            txtMaVoucher.setText(info.get(0));
            txtTenVoucher.setText(info.get(1));
            txtGiamGia.setText(info.get(2));
        }
    }
    
    public void loadAllData(){
        DefaultTableModel model = ((DefaultTableModel)tblVoucher.getModel());
        model.setRowCount(0);
        ResultSet rs = _bll.getAllVoucher();
        if(rs != null){
            try {
                while(rs.next()){
                    Vector<String> info = new Vector<String>();
                    info.add(rs.getString("MV"));
                    info.add(rs.getString("TenV"));
                    info.add(rs.getString("GiamGia"));
                    data.add(info);
                }   
            } catch (SQLException ex) {
                Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã voucher cần tìm");
        }
    }

    public void loadDataByMaVoucher(String maVoucher){
        DefaultTableModel model = ((DefaultTableModel)tblVoucher.getModel());
        model.setRowCount(0);
        ResultSet rs = _bll.getAllVoucherByMaVoucher(maVoucher);
        try {
            while(rs.next()){
                Vector<String> info = new Vector<String>();
                info.add(rs.getString("MaVoc"));
                info.add(rs.getString("TenVoc"));
                info.add(rs.getString("GiamGia"));
                data.add(info);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void loadDataByTenVoucher(String tenVoucher){
        DefaultTableModel model = ((DefaultTableModel)tblVoucher.getModel());
        model.setRowCount(0);
        ResultSet rs = _bll.getAllVoucherByTenVoucher(tenVoucher);
        try {
            while(rs.next()){
                Vector<String> info = new Vector<String>();
                info.add(rs.getString("MaVoc"));
                info.add(rs.getString("TenVoc"));
                info.add(rs.getString("GiamGia"));
                data.add(info);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmDichVu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMaVoucher = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenVoucher = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVoucher = new javax.swing.JTable();
        btnTimKiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtGiamGia = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Voucher");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel1.setText("Mã voucher");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        getContentPane().add(txtMaVoucher, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 148, -1));

        jLabel3.setText("Tên voucher");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
        getContentPane().add(txtTenVoucher, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 148, -1));

        tblVoucher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã voucher", "Tên voucher", "Giảm giá"
            }
        ));
        tblVoucher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVoucherMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVoucher);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 500, -1));

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        getContentPane().add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, -1, -1));

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        getContentPane().add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        jLabel4.setText("Giảm giá");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));
        getContentPane().add(txtGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 150, -1));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        getContentPane().add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        getContentPane().add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblVoucherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVoucherMouseClicked
        displayDetail(((JTable)evt.getSource()).getSelectedRow());
    }//GEN-LAST:event_tblVoucherMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String maVoucher = txtMaVoucher.getText();
        String tenVoucher = txtTenVoucher.getText();

        if(maVoucher.isEmpty() && tenVoucher.isEmpty()){
            loadAllData();
        } else {
            if(maVoucher.isEmpty() == false){
                loadDataByMaVoucher(maVoucher);
            } else {
                loadDataByTenVoucher(tenVoucher);
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String maVoucher = txtMaVoucher.getText();
        if(maVoucher.isEmpty()){
            System.out.println("Vui lòng nhập mã dịch vụ để xóa");
        } else {
            int sl = _bll.getSLVoucherTheoMa(maVoucher);
            if(sl == 0){
                JOptionPane.showMessageDialog(this, "Không tồn tại mã voucher để xóa");
            } else {
                try{
                    _bll.delete(maVoucher);
                    JOptionPane.showMessageDialog(this, "Xóa voucher thành công");
                    loadAllData();
                } catch (Exception e){
                    JOptionPane.showMessageDialog(this, "Lỗi không thể xóa voucher");
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String maVoucher = txtMaVoucher.getText();
        String tenVoucher = txtTenVoucher.getText();
        var giamGia = Double.valueOf("0");
        //String lienhe = ((ComboBoxItem)cboLienHe.getSelectedItem()).getKeyString();

        if(maVoucher.isEmpty() || tenVoucher.isEmpty() || txtGiamGia.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin để thêm voucher");
            return;
        }
        
        try{
            giamGia = Double.valueOf(txtGiamGia.getText());
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Giảm giá phải thuộc [0,1]");
            return;
        }
            
        if(giamGia < 0 || giamGia > 1){
            JOptionPane.showMessageDialog(this, "Giảm giá phải thuộc [0,1]");
            return;
        }
        try{
            int sl = _bll.getSLVoucherTheoMa(maVoucher);
            if(sl == 0){
                _bll.insertNew(maVoucher, tenVoucher, giamGia);
                JOptionPane.showMessageDialog(this, "Thêm voucher thành công");
                loadAllData();
            } else if(sl > 0) {
                JOptionPane.showMessageDialog(this, "Lỗi trùng khóa mã voucher");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không thể thêm mới dịch vụ");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        String maVoucher = txtMaVoucher.getText();
        String tenVoucher = txtTenVoucher.getText();
        var giamGia = Double.valueOf("0");
        //String lienhe = ((ComboBoxItem)cboLienHe.getSelectedItem()).getKeyString();

        if(maVoucher.isEmpty() || tenVoucher.isEmpty() || txtGiamGia.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin để sửa voucher");
            return;
        }
        
        try{
            giamGia = Double.valueOf(txtGiamGia.getText());
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Giảm giá phải thuộc [0,1]");
            return;
        }
            
        if(giamGia < 0 || giamGia > 1){
            JOptionPane.showMessageDialog(this, "Giảm giá phải thuộc [0,1]");
            return;
        }
        try{
            int sl = _bll.getSLVoucherTheoMa(maVoucher);
            if(sl == 0){
                JOptionPane.showMessageDialog(this, "Không tồn tại voucher có mã " + maVoucher);
            } else {
                _bll.update(maVoucher, tenVoucher, giamGia);
                loadAllData();
                JOptionPane.showMessageDialog(this, "Sửa voucher thành công");
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Lỗi không thể thêm mới dịch vụ");
        }
    }//GEN-LAST:event_btnSuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVoucher;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtMaVoucher;
    private javax.swing.JTextField txtTenVoucher;
    // End of variables declaration//GEN-END:variables
}
